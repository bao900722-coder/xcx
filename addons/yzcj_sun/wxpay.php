<?php
 class WeixinPay { protected $appid; protected $mch_id; protected $key; protected $openid; protected $out_trade_no; protected $body; protected $total_fee; function __construct($appid, $openid, $mch_id, $key, $out_trade_no, $body, $total_fee) { goto a8zVX; Wq_rq: $this->body = $body; goto ChsBZ; a8zVX: $this->appid = $appid; goto rhr0s; JFFaw: $this->mch_id = $mch_id; goto keOfA; keOfA: $this->key = $key; goto pxRG8; rhr0s: $this->openid = $openid; goto JFFaw; ChsBZ: $this->total_fee = $total_fee; goto thEpw; pxRG8: $this->out_trade_no = $out_trade_no; goto Wq_rq; thEpw: } public function pay() { $return = $this->weixinapp(); return $return; } private function unifiedorder() { goto XOMlX; g7Siq: $parameters["\163\x69\x67\x6e"] = $this->getSign($parameters); goto i1YRz; vFTjN: return $return; goto JCWs8; XOMlX: $url = "\150\x74\x74\160\x73\x3a\x2f\57\x61\x70\151\x2e\x6d\x63\x68\56\167\x65\151\x78\x69\x6e\x2e\161\161\56\x63\x6f\155\57\x70\x61\171\57\x75\x6e\151\146\151\145\144\x6f\x72\144\x65\x72"; goto Tn3qx; i1YRz: $xmlData = $this->arrayToXml($parameters); goto UR41u; UR41u: $return = $this->xmlToArray($this->postXmlCurl($xmlData, $url, 60)); goto vFTjN; Tn3qx: $parameters = array("\x61\160\x70\x69\x64" => $this->appid, "\x6d\143\150\x5f\x69\x64" => $this->mch_id, "\156\157\x6e\143\145\x5f\x73\164\x72" => $this->createNoncestr(), "\142\157\x64\171" => $this->body, "\157\x75\164\137\x74\x72\141\144\145\x5f\x6e\x6f" => $this->out_trade_no, "\x74\157\164\141\154\x5f\146\x65\145" => $this->total_fee, "\x73\160\142\151\x6c\x6c\137\x63\162\145\x61\x74\145\x5f\151\160" => "\x31\71\62\56\61\x36\70\56\x30\x2e\61\x36\x31", "\156\157\164\151\x66\x79\x5f\x75\x72\154" => "\x68\x74\x74\x70\72\x2f\x2f\167\x77\x77\56\167\145\x69\170\151\x6e\x2e\x71\x71\56\x63\x6f\155\x2f\x77\x78\160\x61\171\x2f\160\x61\x79\56\x70\x68\x70", "\157\160\x65\x6e\x69\144" => $this->openid, "\x74\x72\x61\x64\x65\137\164\x79\x70\145" => "\112\123\101\120\x49"); goto g7Siq; JCWs8: } private static function postXmlCurl($xml, $url, $second = 30) { goto yeppD; d4xtI: curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); goto N_kJd; NHG6H: goto J44NV; goto zm_FE; h392X: curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); goto d4xtI; LZJ18: curl_setopt($ch, CURLOPT_POST, TRUE); goto Seznz; xi1Ze: throw new WxPayException("\143\x75\162\154\xe5\x87\xba\351\224\x99\xef\274\214\351\x94\231\350\257\257\347\xa0\x81\x3a{$error}"); goto NHG6H; N_kJd: curl_setopt($ch, CURLOPT_HEADER, FALSE); goto yJqQF; CRqUn: curl_setopt($ch, CURLOPT_URL, $url); goto h392X; uLMEw: J44NV: goto Bwvpt; NZJFY: curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 20); goto q5QCG; zm_FE: f5rEW: goto e02Ta; yeppD: $ch = curl_init(); goto WAFwP; Seznz: curl_setopt($ch, CURLOPT_POSTFIELDS, $xml); goto NZJFY; yJqQF: curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); goto LZJ18; NCGoN: set_time_limit(0); goto k9kZY; k32uh: $error = curl_errno($ch); goto Zgdqi; k9kZY: $data = curl_exec($ch); goto J33Zh; ZyKDw: return $data; goto uLMEw; J33Zh: if ($data) { goto f5rEW; } goto k32uh; Zgdqi: curl_close($ch); goto xi1Ze; e02Ta: curl_close($ch); goto ZyKDw; q5QCG: curl_setopt($ch, CURLOPT_TIMEOUT, 40); goto NCGoN; WAFwP: curl_setopt($ch, CURLOPT_TIMEOUT, $second); goto CRqUn; Bwvpt: } private function arrayToXml($arr) { goto kwfo8; kwfo8: $xml = "\74\162\157\x6f\164\x3e"; goto JtZ8f; r9jxq: $xml .= "\74\x2f\162\x6f\157\164\76"; goto Zg1b6; vrrZA: ZL3RD: goto r9jxq; Zg1b6: return $xml; goto LmjQM; JtZ8f: foreach ($arr as $key => $val) { goto E8Mjk; D12jY: $xml .= "\x3c" . $key . "\x3e" . arrayToXml($val) . "\x3c\x2f" . $key . "\x3e"; goto LLZCi; LLZCi: Ll1tU: goto b_snX; b_snX: Gm4Pb: goto ELUpX; Nf5Ej: D5EY3: goto D12jY; Ot_el: $xml .= "\74" . $key . "\x3e" . $val . "\x3c\57" . $key . "\76"; goto eAq1M; E8Mjk: if (is_array($val)) { goto D5EY3; } goto Ot_el; eAq1M: goto Ll1tU; goto Nf5Ej; ELUpX: } goto vrrZA; LmjQM: } private function xmlToArray($xml) { goto GMf1Q; l4jUL: $xmlstring = simplexml_load_string($xml, "\123\x69\x6d\x70\154\x65\x58\115\114\105\x6c\x65\x6d\x65\x6e\x74", LIBXML_NOCDATA); goto UE40n; KARhP: return $val; goto PzkAj; UE40n: $val = json_decode(json_encode($xmlstring), true); goto KARhP; GMf1Q: libxml_disable_entity_loader(true); goto l4jUL; PzkAj: } private function weixinapp() { goto YZ0bs; qb7gO: $parameters = array("\141\x70\160\x49\144" => $this->appid, "\164\x69\155\145\123\164\141\x6d\x70" => '' . time() . '', "\156\x6f\156\x63\x65\x53\164\162" => $this->createNoncestr(), "\x70\x61\143\153\141\x67\145" => "\x70\x72\145\x70\141\171\137\x69\144\x3d" . $unifiedorder["\x70\162\145\x70\x61\171\x5f\151\144"], "\x73\151\147\x6e\x54\x79\160\x65" => "\x4d\x44\65"); goto BrQwk; GiPrS: return $parameters; goto my5_g; BrQwk: $parameters["\x70\x61\171\123\x69\147\156"] = $this->getSign($parameters); goto GiPrS; YZ0bs: $unifiedorder = $this->unifiedorder(); goto qb7gO; my5_g: } private function createNoncestr($length = 32) { goto hSeyc; dO1HZ: if (!($i < $length)) { goto Avpr5; } goto zj02h; ALwy3: $i++; goto v8JiO; I3_6t: ToN0a: goto ALwy3; U9Ioe: XbdEr: goto dO1HZ; kB9Fa: $i = 0; goto U9Ioe; gH8uq: $str = ''; goto kB9Fa; zj02h: $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1); goto I3_6t; v8JiO: goto XbdEr; goto JNEmK; JNEmK: Avpr5: goto v3AoZ; v3AoZ: return $str; goto Mg7Q0; hSeyc: $chars = "\141\142\x63\144\145\146\x67\150\151\152\x6b\154\x6d\156\157\160\161\162\x73\x74\x75\166\x77\170\x79\172\x30\x31\62\x33\x34\x35\66\x37\70\x39"; goto gH8uq; Mg7Q0: } private function getSign($Obj) { goto Ao2FP; fEZnV: return $result_; goto ay4n9; v2I9d: $String = md5($String); goto di6zh; qAIyJ: $String = $String . "\x26\153\145\171\75" . $this->key; goto v2I9d; kxyHh: ksort($Parameters); goto NPHCb; Ao2FP: foreach ($Obj as $k => $v) { $Parameters[$k] = $v; HMU_7: } goto q0JF1; q0JF1: ip8GE: goto kxyHh; di6zh: $result_ = strtoupper($String); goto fEZnV; NPHCb: $String = $this->formatBizQueryParaMap($Parameters, false); goto qAIyJ; ay4n9: } private function formatBizQueryParaMap($paraMap, $urlencode) { goto pCmIG; gRAAN: return $reqPar; goto MOl6e; pCmIG: $buff = ''; goto aNxpZ; hm_8r: XPC80: goto gRAAN; INZRb: if (!(strlen($buff) > 0)) { goto XPC80; } goto RcaFs; aNxpZ: ksort($paraMap); goto r5teO; OS3lI: e49pH: goto Vmjat; Vmjat: $reqPar; goto INZRb; r5teO: foreach ($paraMap as $k => $v) { goto QaClC; QaClC: if (!$urlencode) { goto gOEi4; } goto BIa_3; AYiyT: gOEi4: goto GNUaa; os3iy: IC8mv: goto veh5k; GNUaa: $buff .= $k . "\75" . $v . "\46"; goto os3iy; BIa_3: $v = urlencode($v); goto AYiyT; veh5k: } goto OS3lI; RcaFs: $reqPar = substr($buff, 0, strlen($buff) - 1); goto hm_8r; MOl6e: } }